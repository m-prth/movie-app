name: Analyze, Test and Build

on:
  push:
    branches:
    - master

jobs:

  # lint:
  #   name: Analyze the code
  #   runs-on: ubuntu-latest
  #   steps: 
  #     - name: Clone flutter repository from stable channel with 2.2.3 version
  #       uses: subosito/flutter-action@v1
  #       with:
  #         flutter-version: '2.2.3'
  #         channel: 'stable'
      
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Update dependencies
  #       run: flutter pub get
        
  #     - name: Analyze code
  #       run: flutter analyze

  # test:
  #   name: Test Coverage on ubuntu-latest
  #   needs: lint
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Clone flutter repository from stable channel with version 2.2.3
  #       uses: subosito/flutter-action@v1
  #       with:
  #         flutter-version: '2.2.3'
  #         channel: 'stable'

  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Update dependencies
  #       run: flutter pub get

  #     - name: Test and get test coverage
  #       run: flutter test --coverage 
      
  #     - name: Very Good Ventures Test Coverage
  #       uses: VGVentures/very-good-coverage@v1.1.1
  #       with:
  #         path: "./coverage/lcov.info"
  #         min_coverage: 1

  #     - name: Upload coverage to Codecov
  #       uses: codecov/codecov-action@v1
  #       with:
  #         token: ${{ secrets.CODECOV_TOKEN }}
  #         file: coverage/lcov.info

  version:
    name: Create version number
    runs-on: ubuntu-latest
    # needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Fetch all history for all tags and branches
        run: git fetch --unshallow --tags

      - name: Install GitVersion
        uses: gittools/actions/getversion/setup@v0.9.10
        with: 
          versionSpec: '5.x'

      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.10

      - name: Create version.txt with nuGitVersion
        run: echo ${{ steps.gitversion.outputs.nuGitVersion }} >> version.txt

      - name: Upload version.txt
        uses: actions/upload-artifact@v2
        with: 
          name: gitversion
          path: version.txt