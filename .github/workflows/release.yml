name: Analyze, Test and Build

on:
  push:
    branches:
    - master

jobs:

  lint:
    name: Analyze the code
    runs-on: ubuntu-latest
    steps: 
      - name: Clone flutter repository from stable channel with 2.2.3 version
        uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.2.3'
          channel: 'stable'
      
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Update dependencies
        run: flutter pub get
        
      - name: Analyze code
        run: flutter analyze

  test:
    name: Test Coverage on ubuntu-latest
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Clone flutter repository from stable channel with version 2.2.3
        uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.2.3'
          channel: 'stable'

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Update dependencies
        run: flutter pub get

      - name: Test and get test coverage
        run: flutter test --coverage 
      
      - name: Very Good Ventures Test Coverage
        uses: VGVentures/very-good-coverage@v1.1.1
        with:
          path: "./coverage/lcov.info"
          min_coverage: 1

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage/lcov.info

  version:
    name: Create version number
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Fetch all history for all tags and branches
      run: git fetch --unshallow --tags

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.10
      with:
        versionSpec: '5.x'

    - name: Use GitVersion
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.10

    - name: Create version.txt with nuGetVersion
      run: echo ${{ steps.gitversion.outputs.nuGetVersion  }} > version.txt

    - name: Upload version.txt
      uses: actions/upload-artifact@v2
      with:
        name: gitversion
        path: version.txt

  build:
    name: Build aab and create release
    needs: [ version ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Java JDK
        uses: actions/setup-java@v1
        with:
          java-version: '12.x'

      - name: Clone flutter repository from stable channel with 2.2.3 version
        uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.2.3'
          channel: 'stable'

      - name: Get version.txt
        uses: actions/download-artifact@v2
        with:
          name: gitversion

      - name: Create new file without newline char from version.txt
        run: tr -d '\n' < version.txt > version1.txt

      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: version1.txt

      - name: Update version in YAML
        run: |
          sed -i 's/99.99.99+99/${{ steps.version.outputs.content }}+${{ github.run_number }}/g' pubspec.yaml
          VERSION_NAME="$(grep 'version:' pubspec.yaml | awk '{ print $2 }' | cut -d'+' -f 1)"
          VERSION_CODE="$(grep 'version:' pubspec.yaml | awk '{ print $2 }' | cut -d'+' -f 2)"
          echo $VERSION_NAME
          echo $VERSION_CODE      

      - name: Update dependencies
        run: flutter pub get

      - name: Build Android App
        run: flutter build apk --release

      - name: Create a Release in GitHub
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/app-release.apk"
          token: ${{ secrets.TOKEN }}
          tag: ${{ steps.version.outputs.content }}
          commit: ${{ github.sha }}
          prerelease: false
          
      - name: Upload app apk
        uses: actions/upload-artifact@v2
        with:
          name: appbundle
          path: build/app/outputs/flutter-apk/app-release.apk

      